name: Bygg og deploy

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'

jobs:
  docker-and-nais-deploy:
    name: Laste opp docker image og deploye app
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v2
      - name: Sette opp Java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - name: Bygge JAR
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.PLEIEPENGER_UTTAK_TOKEN }}
        run: mvn package --batch-mode --settings ./.m2/settings.xml --file pom.xml -DtrimStackTrace=false -Drevision= -Dchangelist= -Dsha1="$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)"
      - name: Setting version
        run: |
          export GIT_COMMIT_HASH=$(git log -n 1 --pretty=format:'%h')
          export BUILD_DATE=$(date +%Y%m%d%H%M%S)
          export VERSION=1.0_${BUILD_DATE}_${GIT_COMMIT_HASH}
          echo "Setting version $VERSION"
          mvn versions:set -DnewVersion="$VERSION"
          mvn versions:commit
      - name: Deploy kontrakter to Github Package repo
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.PLEIEPENGER_UTTAK_TOKEN }}
        run: |
          mvn --settings ./.m2/settings.xml deploy -DskipTests=true -Dmaven.wagon.http.pool=false
          echo "TAG=$TIMESTAMP-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
      - name: Sette Docker image navn og tag
        env:
          DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/server
        run: |
          echo "IMAGE=$DOCKER_IMAGE:$TAG" >> $GITHUB_ENV
          echo "LATEST=$DOCKER_IMAGE:latest" >> $GITHUB_ENV
      - name: Bygge Docker image
        run: docker build . --pull --tag $IMAGE --tag $LATEST
      - name: Laste opp Docker image
        run: |
          echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push $LATEST
          docker push $IMAGE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Lukk gamle issues
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deployment']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });

      -  name: Opprett deployment issue
         id: createdeployissue
         if: success()
         uses: actions/github-script@v4
         with:
           github-token: ${{secrets.GITHUB_TOKEN}}
           script: |
             github.issues.create( {
               owner: context.issue.owner,
               repo: context.issue.repo,
               labels: ['deployment'],
               body: 'Kommenter enten "/promote dev-fss default" eller "/promote prod-fss default"',
               title: 'Deploy av ${{ env.TAG }}'})
             .then(response => {
                     core.setOutput('number', response.data.number);
              });

      - name: Trigger deploy av k9-sak
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = { owner: context.issue.owner,
                            repo: context.issue.repo,
                            issue_number: ${{ steps.createdeployissue.outputs.number }} }
            github.issues.createComment({...issue,
                                    title: 'Deploy av ${{ env.TAG }}',
                                    body: '/promote dev-fss default'})

